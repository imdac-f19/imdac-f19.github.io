(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{221:function(e,t,r){"use strict";r.r(t);var i=r(0),n=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"placing-grid-items"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#placing-grid-items","aria-hidden":"true"}},[e._v("#")]),e._v(" Placing Grid Items")]),e._v(" "),r("p",[e._v("By default the browser will fill a grid with grid items based on their source order, with each item taking one grid cell. But by using the "),r("code",[e._v("grid-column-start")]),e._v(", "),r("code",[e._v("grid-column-end")]),e._v(", "),r("code",[e._v("grid-row-start")]),e._v(" and "),r("code",[e._v("grid-row-end")]),e._v(", it is possible to place items anywhere on a grid.")]),e._v(" "),r("iframe",{staticStyle:{width:"100%"},attrs:{height:"350",scrolling:"no",title:"CSS Grid - Placing Grid Items",src:"//codepen.io/IMD/embed/PVYxdq/?height=350&theme-id=0&default-tab=css,resultundefined",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"}},[e._v("\n  See the Pen "),r("a",{attrs:{href:"https://codepen.io/IMD/pen/PVYxdq/"}},[e._v("CSS Grid - Placing Grid Items")]),e._v(" by IMD\n  ("),r("a",{attrs:{href:"https://codepen.io/IMD"}},[e._v("@IMD")]),e._v(") on "),r("a",{attrs:{href:"https://codepen.io"}},[e._v("CodePen")]),e._v(".\n")]),e._v(" "),r("h2",{attrs:{id:"spanning-grid-items"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spanning-grid-items","aria-hidden":"true"}},[e._v("#")]),e._v(" Spanning Grid Items")]),e._v(" "),r("p",[e._v("As seen in the example above, if only a start or an end is provided the grid item will span 1 grid column or row. However, it is possible to have items span multiple cells by including both a start and end value or by using the "),r("code",[e._v("span")]),e._v(" keyword. It is also convenient to use the "),r("code",[e._v("grid-column")]),e._v(" and "),r("code",[e._v("grid-row")]),e._v(" shortcut properties that will accept both the start and end values separated by a "),r("code",[e._v("/")])]),e._v(" "),r("iframe",{staticStyle:{width:"100%"},attrs:{height:"350",scrolling:"no",title:"CSS Grid - Spanning Grid Items",src:"//codepen.io/IMD/embed/ZwzmZr/?height=350&theme-id=0&default-tab=resultundefined",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"}},[e._v("\n  See the Pen "),r("a",{attrs:{href:"https://codepen.io/IMD/pen/ZwzmZr/"}},[e._v("CSS Grid - Spanning Grid Items")]),e._v(" by IMD\n  ("),r("a",{attrs:{href:"https://codepen.io/IMD"}},[e._v("@IMD")]),e._v(") on "),r("a",{attrs:{href:"https://codepen.io"}},[e._v("CodePen")]),e._v(".\n")]),e._v(" "),r("h2",{attrs:{id:"overlapping-grid-items"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#overlapping-grid-items","aria-hidden":"true"}},[e._v("#")]),e._v(" Overlapping Grid Items")]),e._v(" "),r("p",[e._v("It is also possible to have more than one grid item occupy a single grid cell, cause the grid items to overlap. In order to achieve overlapping, it is necessary that grid items occupying the same grid cell, explicit set a column and row start and end.")]),e._v(" "),r("iframe",{staticStyle:{width:"100%"},attrs:{height:"350",scrolling:"no",title:"CSS Grid - Overlapping Grid Items",src:"//codepen.io/IMD/embed/gqOPbP/?height=350&theme-id=0&default-tab=resultundefined",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"}},[e._v("\n  See the Pen "),r("a",{attrs:{href:"https://codepen.io/IMD/pen/gqOPbP/"}},[e._v("CSS Grid - Overlapping Grid Items")]),e._v(" by IMD\n  ("),r("a",{attrs:{href:"https://codepen.io/IMD"}},[e._v("@IMD")]),e._v(") on "),r("a",{attrs:{href:"https://codepen.io"}},[e._v("CodePen")]),e._v(".\n")])])}],!1,null,null,null);t.default=n.exports}}]);